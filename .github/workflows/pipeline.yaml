name: Build and Deploy lumiere Lambdas

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambdaFunction: [sign-in, sign-up, sign-out, user-data, authorizer, user-records, storage-url]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm run build

      - run: npm run test --workspace=@lumiere/${{ matrix.lambdaFunction }}

      - name: Check if build directory exists
        run: |
          if [ ! -d "./build/${{ matrix.lambdaFunction }}" ]; then
            echo "❌ Directory ./build/${{ matrix.lambdaFunction }} does not exist! Build step likely failed."
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.lambdaFunction }}-build-artifact
          path: ./build/${{ matrix.lambdaFunction }}

  package:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        lambdaFunction: [sign-in, sign-up, sign-out, user-data, authorizer, user-records, storage-url]

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.lambdaFunction }}-build-artifact
          path: ./build/${{ matrix.lambdaFunction }}

      - name: List downloaded files
        run: |
          echo "Conteúdo atual do workspace após download:"
          find .

      - name: Check if dist directory exists
        run: |
          if [ ! -d "./build/${{ matrix.lambdaFunction }}/dist" ]; then
            echo "❌ Directory ./build/${{ matrix.lambdaFunction }}/dist does not exist! Likely build artifact is incomplete."
            exit 1
          fi

      - name: Package Lambda
        run: |
          cd ./build/${{ matrix.lambdaFunction }}/dist
          npm install --omit=dev --production
          zip -r ../../../../${{ matrix.lambdaFunction }}.zip .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.lambdaFunction }}-package-artifact
          path: ./${{ matrix.lambdaFunction }}.zip

  deploy:
    needs: package
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        lambdaFunction: [sign-in, sign-up, sign-out, user-data, authorizer]

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.lambdaFunction }}-package-artifact

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - run: |
          aws lambda update-function-code \
            --function-name lumiere-${{ matrix.lambdaFunction }} \
            --zip-file fileb://${{ matrix.lambdaFunction }}.zip
